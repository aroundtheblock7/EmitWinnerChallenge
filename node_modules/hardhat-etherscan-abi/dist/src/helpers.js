"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getVerifiedContractAt = void 0;
const EtherscanGetAbiRequest_1 = require("./etherscan/EtherscanGetAbiRequest");
const prober_1 = require("./network/prober");
const EtherscanService_1 = require("./etherscan/EtherscanService");
const plugins_1 = require("hardhat/plugins");
const pluginName = "hardhat-etherscan-abi";
async function getVerifiedContractAt(hre, address, signer) {
    const { isAddress } = await Promise.resolve().then(() => __importStar(require("@ethersproject/address")));
    if (!isAddress(address)) {
        throw new plugins_1.NomicLabsHardhatPluginError(pluginName, `${address} is an invalid address.`);
    }
    const request = EtherscanGetAbiRequest_1.toGetAbiRequest({
        // @ts-ignore
        apiKey: hre.config.etherscan.apiKey,
        address,
    });
    const endpoint = await prober_1.getEtherscanEndpoints(hre.network.provider, hre.network.name);
    const abi = await EtherscanService_1.getAbi(endpoint.apiURL, request);
    return hre.ethers.getContractAt(abi, address, signer);
}
exports.getVerifiedContractAt = getVerifiedContractAt;
//# sourceMappingURL=helpers.js.map