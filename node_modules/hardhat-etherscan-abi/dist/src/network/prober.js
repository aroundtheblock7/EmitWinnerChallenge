"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEtherscanEndpoints = void 0;
const plugins_1 = require("hardhat/plugins");
const pluginName = "hardhat-etherscan-abi";
// See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md#list-of-chain-ids
var NetworkID;
(function (NetworkID) {
    NetworkID[NetworkID["MAINNET"] = 1] = "MAINNET";
    NetworkID[NetworkID["ROPSTEN"] = 3] = "ROPSTEN";
    NetworkID[NetworkID["RINKEBY"] = 4] = "RINKEBY";
    NetworkID[NetworkID["GOERLI"] = 5] = "GOERLI";
    NetworkID[NetworkID["KOVAN"] = 42] = "KOVAN";
    // Binance Smart Chain
    NetworkID[NetworkID["BSC"] = 56] = "BSC";
    NetworkID[NetworkID["BSC_TESTNET"] = 97] = "BSC_TESTNET";
    // Polygon
    NetworkID[NetworkID["POLYGON"] = 137] = "POLYGON";
    NetworkID[NetworkID["MUMBAI"] = 80001] = "MUMBAI";
    // Arbitrum
    NetworkID[NetworkID["ARBITRUM"] = 42161] = "ARBITRUM";
    // Fantom Opera
    NetworkID[NetworkID["FANTOM"] = 250] = "FANTOM";
    // Snowtrace
    NetworkID[NetworkID["AVALANCHE"] = 43114] = "AVALANCHE";
    NetworkID[NetworkID["FUJI"] = 43113] = "FUJI";
})(NetworkID || (NetworkID = {}));
const networkIDtoEndpoints = {
    [NetworkID.MAINNET]: {
        apiURL: "https://api.etherscan.io/api",
        browserURL: "https://etherscan.io/",
    },
    [NetworkID.ROPSTEN]: {
        apiURL: "https://api-ropsten.etherscan.io/api",
        browserURL: "https://ropsten.etherscan.io",
    },
    [NetworkID.RINKEBY]: {
        apiURL: "https://api-rinkeby.etherscan.io/api",
        browserURL: "https://rinkeby.etherscan.io",
    },
    [NetworkID.GOERLI]: {
        apiURL: "https://api-goerli.etherscan.io/api",
        browserURL: "https://goerli.etherscan.io",
    },
    [NetworkID.KOVAN]: {
        apiURL: "https://api-kovan.etherscan.io/api",
        browserURL: "https://kovan.etherscan.io",
    },
    [NetworkID.BSC]: {
        apiURL: "https://api.bscscan.com/api",
        browserURL: "https://bscscan.com",
    },
    [NetworkID.BSC_TESTNET]: {
        apiURL: "https://api-testnet.bscscan.com/api",
        browserURL: "https://testnet.bscscan.com",
    },
    [NetworkID.POLYGON]: {
        apiURL: "https://api.polygonscan.com/api",
        browserURL: "https://polygonscan.com"
    },
    [NetworkID.MUMBAI]: {
        apiURL: "https://api-testnet.polygonscan.com/api",
        browserURL: "https://mumbai.polygonscan.com"
    },
    [NetworkID.ARBITRUM]: {
        apiURL: "https://api.arbiscan.io/api",
        browserURL: "https://arbiscan.io",
    },
    [NetworkID.FANTOM]: {
        apiURL: "https://api.ftmscan.com/api",
        browserURL: "https://ftmscan.com/",
    },
    [NetworkID.AVALANCHE]: {
        apiURL: "https://api.snowtrace.io/api",
        browserURL: "https://snowtrace.io/",
    },
    [NetworkID.FUJI]: {
        apiURL: "https://api-testnet.snowtrace.io/api",
        browserURL: "https://testnet.snowtrace.io/",
    }
};
async function getEtherscanEndpoints(provider, networkName) {
    // Disable this check because ABI download can be useful in fork mode
    // if (networkName === HARDHAT_NETWORK_NAME) {
    //   throw new NomicLabsHardhatPluginError(
    //     pluginName,
    //     `The selected network is ${networkName}. Please select a network supported by Etherscan.`
    //   );
    // }
    const chainID = parseInt(await provider.send("eth_chainId"), 16);
    const endpoints = networkIDtoEndpoints[chainID];
    if (endpoints === undefined) {
        throw new plugins_1.NomicLabsHardhatPluginError(pluginName, `An etherscan endpoint could not be found for this network. ChainID: ${chainID}. The selected network is ${networkName}.

Possible causes are:
  - The selected network (${networkName}) is wrong.
  - Faulty hardhat network config.

 If you use Mainnet fork mode try setting 'chainId: 1' in hardhat config`);
    }
    return endpoints;
}
exports.getEtherscanEndpoints = getEtherscanEndpoints;
//# sourceMappingURL=prober.js.map